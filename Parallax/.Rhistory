"Obs:1315","Obs:1072","Obs:129","Obs:266","Obs:NaN","Obs:708","Obs:562","Obs:349","Obs:430","Obs:119",
"Obs:716","Obs:871","Obs:NaN","Obs:NaN","Obs:420","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:574","Obs:595","Obs:1306","Obs:877","Obs:1177","Obs:1392","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1649","Obs:NaN","Obs:255","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1113","Obs:1704","Obs:1541",
"Obs:1393","Obs:1471","Obs:NaN","Obs:492","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:427",
"Obs:NaN","Obs:1340","Obs:1128","Obs:1073","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1265",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:312","Obs:425","Obs:624","Obs:649","Obs:822","Obs:2473","Obs:2153","Obs:1113","Obs:1137",
"Obs:777","Obs:966","Obs:834","Obs:834","Obs:1079","Obs:819","Obs:833","Obs:988","Obs:958","Obs:941",
"Obs:934","Obs:945","Obs:825","Obs:959","Obs:2401","Obs:974","Obs:895","Obs:867","Obs:1079","Obs:857",
"Obs:866","Obs:777","Obs:900","Obs:895","Obs:NaN","Obs:1659","Obs:1117","Obs:559","Obs:880","Obs:886",
"Obs:1102","Obs:611","Obs:1067","Obs:702","Obs:781","Obs:781","Obs:1306","Obs:297","Obs:827","Obs:743",
"Obs:800","Obs:826","Obs:793","Obs:842","Obs:791","Obs:803","Obs:838","Obs:1192","Obs:810","Obs:830",
"Obs:1388","Obs:371","Obs:1096","Obs:1245","Obs:1932","Obs:706","Obs:761","Obs:804","Obs:814","Obs:835",
"Obs:816","Obs:984","Obs:602","Obs:814","Obs:778","Obs:802","Obs:810","Obs:833","Obs:988","Obs:564",
"Obs:821","Obs:816","Obs:785","Obs:1084","Obs:791","Obs:761","Obs:1313","Obs:251","Obs:813","Obs:824",
"Obs:840","Obs:851","Obs:867","Obs:835","Obs:824","Obs: 881","Obs:861","Obs:889","Obs:1086","Obs:710",
"Obs:595","Obs:789","Obs:1188:","Obs:428","Obs:867","Obs:837","Obs:NaN","Obs:1647","Obs:845","Obs:832",
"Obs:828","Obs:581","Obs:1009","Obs:715","Obs:823","Obs:746","Obs:797","Obs:812","Obs:1285","Obs:308",
"Obs:821","Obs:810","Obs:807","Obs:834","Obs:812","Obs:907","Obs:458","Obs:728","Obs:822","Obs:827",
"Obs:809","Obs:796","Obs:795","Obs:826","Obs:860","Obs:853","Obs:746","Obs:848","Obs:1040","Obs:611",
"Obs:801","Obs:821","Obs:NaN","Obs:579","Obs:1647","Obs:818","Obs:419","Obs:802","Obs:836","Obs:799",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:809")
mean_heatmap_quarterly2 <- plot_ly(x = total_mean_quarterly$year,
y = total_mean_quarterly$quarter,
z = total_mean_quarterly$mean_oxy,
text=txt_mean_quarter,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate= "Year:%{x} <br> Quarter: %{y} <br> Mean Oxygen Level: %{z} <br> %{text} <extra></extra>") %>%
layout(title = paste("Mean Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters, over quarters"),
yaxis = yform,
plot_bgcolor = 'grey')
mean_heatmap_quarterly2
# test to make sure values displayed are correct
test_ox_data<- bottle_filter %>% filter(year== 2000) %>% select(c("oxygen"))%>%na.omit()
ox_sum<-sum(test_ox_data$oxygen,na.rm = TRUE)
ox_sum/nrow(test_ox_data)
load("data/processed/bottle.RData")
setwd("~/Documents/CalCOFI-internship")
load("data/processed/bottle.RData")
# changing to numeric for filtering purposes
bottle$line <- as.numeric(bottle$line)
bottle$station <- as.numeric(bottle$station)
#filter bottle data
max_depth <- 150
bottle_filter <- bottle %>%
subset(station <= 60) %>%
filter(depth >= 0 & depth <= max_depth,
line >= 76.7 & line <= 93.3)
###### Time series plot for oxygen
# Modifying original ts plot to show percentile
oxy_ts_plot_percentile <- function(n_ranges, percentile, date_min, date_max){
if (n_ranges > 1){
bottle_sub <- bottle %>%
subset(station <= 60) %>%
filter(depth>=0 & depth<=500,
line >= 76.7 & line <= 93.3) %>%
mutate(depth_fac = cut(depth, n_ranges))
}
else {
bottle_sub <- bottle %>%
subset(station <= 60) %>%
filter(depth>=0 & depth<=500,
line >= 76.7 & line <= 93.3) %>%
mutate(depth_fac = rep("[0,500]", length(year)))
}
x <- bottle_sub %>%
group_by(year, quarter, depth_fac) %>%
summarise(oxygen_perc = quantile(oxygen, probs = percentile/100, na.rm = TRUE),
date = median(date, na.rm = T))
x %>%
ggplot(aes(x = date,
y = oxygen_perc,
group = depth_fac,
color = depth_fac,
shape = as.factor(quarter))) +
geom_point(na.rm=T) +
geom_line(linetype='dashed') +
labs(title = paste(percentile,
"th Percentile Oxygen Over Time"),
subtitle = "Data is from stations on the shelf within the core sampling region",
x = "Date",
y = "Oxygen (mL/L)",
color = "Depth Range (m)",
shape = "Quarter") +
scale_shape_discrete(name="Quarter",
breaks=c("1", "2", "3","4"),
labels=c("Winter", "Spring", "Summer","Fall")) +
scale_x_date(limit = c(as.Date(date_min), as.Date(date_max)),
date_labels = "%Y %b %d",
breaks = scales::breaks_pretty(7)) +
scale_y_continuous(limits=c(NA,NA),
expand = c(0.1, 0.1)) +
theme_bw()
}
oxy_ts_plot_percentile(3, 5, '1949-02-28', '2020-01-26')
## Faceting by  quarter
oxy_ts_plot_percentile_quarters <- function(n_ranges, percentile, date_min, date_max){
if (n_ranges > 1){
bottle_sub <- bottle %>%
subset(station <= 60) %>%
filter(depth>=0 & depth<=500,
line >= 76.7 & line <= 93.3) %>%
mutate(depth_fac = cut(depth, n_ranges))
}
else {
bottle_sub <- bottle %>%
subset(station <= 60) %>%
filter(depth>=0 & depth<=500,
line >= 76.7 & line <= 93.3) %>%
mutate(depth_fac = rep("[0,500]", length(year)))
}
z <- bottle_sub %>%
group_by(year, quarter, depth_fac) %>%
summarise(oxygen_perc = quantile(oxygen, probs = percentile/100, na.rm = TRUE),
date = median(date, na.rm = T))
z %>%
ggplot(aes(x = date,
y = oxygen_perc,
group = depth_fac,
color = depth_fac,
# shape = as.factor(quarter)
)) +
geom_point(na.rm = T) +
facet_wrap(~ quarter,
nrow = 2) +
geom_line(linetype='dashed') +
labs(title = paste(percentile,
"th Percentile Oxygen Across All On-Shelf Stations Over Time"),
subtitle = "Q1 is Winter, Q2 is Spring, Q3 is Summer, Q4 is Fall",
x = "Date",
y = "Oxygen (mL/L)",
color = "Depth Range (m)",
# shape = "Quarter"
) +
# scale_shape_discrete(name="Quarter",
# breaks=c("1", "2", "3","4"),
# labels=c("Winter", "Spring", "Summer","Fall")) +
scale_x_date(limit = c(as.Date(date_min), as.Date(date_max)),
date_labels = "%Y %b %d",
breaks = scales::breaks_pretty(7)) +
scale_y_continuous(limits=c(NA,NA),
expand = c(0.1, 0.1)) +
theme_bw()
}
oxy_ts_plot_percentile_quarters(3, 95, '1949-02-28', '2020-01-26')
#heat map visual ###
## Counting unique stations for each quarter
bottle_station_count <- bottle_filter %>%
unite('station_id', line:station, remove = FALSE)
bottle_station_count <- bottle_station_count %>%
unite('time', c(year, quarter), remove = FALSE)
bottle_station_count <- bottle_station_count %>%
select(c("station_id", time, oxygen)) %>%
na.omit()
station_number_check <- bottle_station_count %>%
select(c("station_id","time")) %>%
unique() %>%
count(time)
station_number_check
## Counting unique stations for each year
bottle_station_count <- bottle_filter %>%
unite('station_id', line:station, remove = FALSE)
year_check_pre <- bottle_station_count %>%
select(c("station_id","year","oxygen")) %>%
na.omit()
year_check <- year_check_pre %>%
select(c("station_id","year")) %>%
unique() %>%
count(year)
year_check
## Return years that have less than n stations
n <- 3
yrs_under_threshold <- data.frame(year = double())
for (row in 1:nrow(year_check)) {
stations <- year_check[row, "n"]
year <- year_check[row, "year"]
if (stations < n){
yrs_under_threshold <- rbind(yrs_under_threshold, year)
}
}
yrs_under_threshold
# return quarters that have less than n stations
qts_under_threshold <- data.frame(time = character())
for (row in 1:nrow(station_number_check)) {
stations <- station_number_check[row, "n"]
quarter <- station_number_check[row, "time"]
if (stations < n){
qts_under_threshold <- rbind(qts_under_threshold, quarter)
}
}
qts_under_threshold
#### Heat map visuals
## Median Heatmaps
# function to get list of oxygen for heat map
# uses bottle_filter, as defined above
# adjust desired max_depth above bottle_filter def before running function
get_oxy_percent_quarters <- function(percentile, date_min, date_max){
h <- bottle_filter %>%
group_by(year, quarter) %>%
summarise(oxygen_perc = quantile(oxygen, probs = percentile/100, na.rm = TRUE),
date = median(date, na.rm = T))
return(h)
}
hm_median_quarters <- get_oxy_percent_quarters(50, '1949-02-28', '2020-01-26')
hm_median_quarters <- hm_median_quarters %>% group_by(quarter,year)
hm_median_quarters$quarter <- as.character(hm_median_quarters$quarter)
hm_median_quarters <- hm_median_quarters %>%
mutate(quarter = recode(quarter,'1' = 'Winter','2' = 'Spring','3' =  'Summer','4'='Fall' ))
yform <- list(categoryorder = "array",
categoryarray = c( "Fall",
"Summer",
"Spring",
"Winter"))
add_missing_data_med<-data.frame("year"=c(1956,1956,1965,1967,1967,1968,1968,1970,1970,1970,1971,1971,1971,1973,1973,
1973,1974,1974,1974,1976,1977,1977,1977,1978,1980,1980,1980,1981,1982,1982,
1982,1991,2009,2018,2020,2020,2020),
"quarter"=c(3,4,4,1,4,3,4,1,2,4,2,3,4,1,2,3,1,2,3,3,1,2,3,4,1,2,3,4,2,3,4,2,2,3,2,3,4),
"oxygen_perc"=c(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN
,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,
NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN))
add_missing_data_med
hm_median_quarters <- hm_median_quarters %>%
select(c("year", "quarter", "oxygen_perc"))
total_median_quarterly <- rbind(add_missing_data_med, hm_median_quarters) # append empty values with mean data
# filter out quarters with under 5 stations sampled
total_median_quarterly <- total_median_quarterly %>%
unite('time', c(year, quarter), remove = FALSE)  # add time column
# change mean_oxy to NaN for selected times
for (row in 1:nrow(total_median_quarterly)){
if (total_median_quarterly[row, "time"] %in% qts_under_threshold$time){
total_median_quarterly[row, "mean_oxy"] <- NaN
}
}
total_median_quarterly <- total_median_quarterly[c("year", "quarter", "oxygen_perc")]
total_median_quarterly <- arrange(total_median_quarterly, year) %>%
mutate(quarter = recode(quarter,'1' = 'Winter','2' = 'Spring','3' =  'Summer','4'='Fall' ))
median_heatmap_quarterly <- plot_ly(x = total_median_quarterly$year,
y = total_median_quarterly$quarter,
z = total_median_quarterly$oxygen_perc,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate= "Year:%{x} <br> Quarter: %{y} <br> Median Oxygen Level: %{z} <extra></extra>") %>%
layout(title = paste("Median Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters, over quarters"),
yaxis = yform,
plot_bgcolor = 'grey')
median_heatmap_quarterly
#median heatmap quarterly with observations in hover
txt_med_quarter<-c("Obs:124","Obs:152","Obs:192","Obs:210","Obs:507","Obs:955","Obs:603","Obs:NaN","Obs:820","Obs:851",
"Obs:959","Obs:778","Obs:1535","Obs:1353","Obs:991","Obs:589","Obs:1907","Obs:2445","Obs:1877","Obs:1132",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:858","Obs:721","Obs:1227","Obs:NaN","Obs:NaN",
"Obs:354","Obs:845","Obs:45","Obs:426","Obs:555","Obs:618","Obs:747","Obs:675","Obs:1262","Obs:1465",
"Obs:1825","Obs:1521","Obs:1554","Obs:1766","Obs:1978","Obs:1411","Obs:656","Obs:340","Obs:512","Obs:705",
"Obs:277","Obs:397","Obs:560","Obs:301","Obs:237","Obs:516","Obs:409","Obs:426","Obs:341","Obs:338",
"Obs:1315","Obs:1072","Obs:129","Obs:266","Obs:NaN","Obs:708","Obs:562","Obs:349","Obs:430","Obs:119",
"Obs:716","Obs:871","Obs:NaN","Obs:NaN","Obs:420","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:574","Obs:595","Obs:1306","Obs:877","Obs:1177","Obs:1392","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1649","Obs:NaN","Obs:255","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1113","Obs:1704","Obs:1541",
"Obs:1393","Obs:1471","Obs:NaN","Obs:492","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:427",
"Obs:NaN","Obs:1340","Obs:1128","Obs:1073","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1265",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:312","Obs:425","Obs:624","Obs:649","Obs:822","Obs:2473","Obs:2153","Obs:1113","Obs:1137",
"Obs:777","Obs:966","Obs:834","Obs:834","Obs:1079","Obs:819","Obs:833","Obs:988","Obs:958","Obs:941",
"Obs:934","Obs:945","Obs:825","Obs:959","Obs:2401","Obs:974","Obs:895","Obs:867","Obs:1079","Obs:857",
"Obs:866","Obs:777","Obs:900","Obs:895","Obs:NaN","Obs:1659","Obs:1117","Obs:559","Obs:880","Obs:886",
"Obs:1102","Obs:611","Obs:1067","Obs:702","Obs:781","Obs:781","Obs:1306","Obs:297","Obs:827","Obs:743",
"Obs:800","Obs:826","Obs:793","Obs:842","Obs:791","Obs:803","Obs:838","Obs:1192","Obs:810","Obs:830",
"Obs:1388","Obs:371","Obs:1096","Obs:1245","Obs:1932","Obs:706","Obs:761","Obs:804","Obs:814","Obs:835",
"Obs:816","Obs:984","Obs:602","Obs:814","Obs:778","Obs:802","Obs:810","Obs:833","Obs:988","Obs:564",
"Obs:821","Obs:816","Obs:785","Obs:1084","Obs:791","Obs:761","Obs:1313","Obs:251","Obs:813","Obs:824",
"Obs:840","Obs:851","Obs:867","Obs:835","Obs:824","Obs: 881","Obs:861","Obs:889","Obs:1086","Obs:710",
"Obs:595","Obs:789","Obs:1188:","Obs:428","Obs:867","Obs:837","Obs:NaN","Obs:1647","Obs:845","Obs:832",
"Obs:828","Obs:581","Obs:1009","Obs:715","Obs:823","Obs:746","Obs:797","Obs:812","Obs:1285","Obs:308",
"Obs:821","Obs:810","Obs:807","Obs:834","Obs:812","Obs:907","Obs:458","Obs:728","Obs:822","Obs:827",
"Obs:809","Obs:796","Obs:795","Obs:826","Obs:860","Obs:853","Obs:746","Obs:848","Obs:1040","Obs:611",
"Obs:801","Obs:821","Obs:NaN","Obs:579","Obs:1647","Obs:818","Obs:419","Obs:802","Obs:836","Obs:799",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:809")
median_heatmap_quarterly2 <- plot_ly(x = total_median_quarterly$year,
y = total_median_quarterly$quarter,
z = total_median_quarterly$oxygen_perc,
text=txt_med_quarter,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate= "Year:%{x} <br> Quarter: %{y} <br> Median Oxygen Level: %{z} <br> %{text} <extra></extra>") %>%
layout(title = "Median Oxygen Levels in Core CalCOFI stations up to 300 meters, over quarters",
yaxis = yform,
plot_bgcolor = 'grey')
median_heatmap_quarterly2
## heatmap without quarters
get_oxygen_perc_years <- function(percentile, date_min, date_max){
h <- bottle_filter %>%
group_by(year) %>%
summarise(oxygen_perc = quantile(oxygen, probs = percentile/100, na.rm = TRUE),
date = median(date, na.rm = T))
return(h)
}
hm_median_years <- get_oxygen_perc_years(50, '1949-02-28', '2020-01-26')
hm_median_years <- hm_median_years %>% group_by(year)
hm_median_years$y <- rep(0,71)
ax <- list(showticklabels = FALSE)
for (row in 1:nrow(hm_median_years)){
if (hm_median_years[row, "year"] %in% yrs_under_threshold$year){
hm_median_years[row, "oxygen_perc"] <- NaN
}
}
median_heatmap_yearly <- plot_ly(x = hm_median_years$year,
y = hm_median_years$y,
z = hm_median_years$oxygen_perc,
type="heatmap",
colors ="magma",
reversescale=T,
hovertemplate= "Year:%{x} <br> Median Oxygen Level: %{z}<extra></extra>") %>%
layout(title = paste("Median Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters"),
yaxis = ax,
plot_bgcolor = 'grey')
median_heatmap_yearly
#median heatmap yearly with observations in hover
year_obs_count<- bottle_filter %>% group_by(year)%>%count()
txt_median_year<-c("Obs:678","Obs:2173","Obs:3408","Obs:4468","Obs:7361","Obs:NaN","Obs:3179","Obs:1199","Obs:1644","Obs:4149","Obs:6666",
"Obs:4385","Obs:1891","Obs:1614","Obs:1514","Obs:2782","Obs:1619","Obs:2136","Obs:602","Obs:1169","Obs:4752","Obs:64",
"Obs:65","Obs:2065","Obs:35","Obs:1113","Obs:6109","Obs:747","Obs:427","Obs:3541","Obs:Nan","Obs:1934","Obs:312",
"Obs:2520","Obs:6876","Obs:3411","Obs:3719","Obs:3778","Obs:5159","Obs:3698","Obs:3438","Obs:3335","Obs:3479","Obs:3331",
"Obs:3173","Obs:3261","Obs:3624","Obs:3399","Obs:4979","Obs:3214","Obs:3216","Obs:3223","Obs:3189","Obs:3421","Obs:3201",
"Obs:3393","Obs:3455","Obs:3180","Obs:3320","Obs:3324","Obs:3133","Obs:3178","Obs:3324","Obs:3360","Obs:2835","Obs:3326",
"Obs:3307","Obs:3273","Obs:3044","Obs:2856","Obs:809")
median_heatmap_yearly2 <- plot_ly(x = hm_median_years$year,
y = hm_median_years$y,
z = hm_median_years$oxygen_perc,
text=txt_median_year,
type="heatmap",
colors ="magma",
reversescale=T,
hovertemplate= "Year:%{x} <br> Median Oxygen Level: %{z} <br> %{text} <extra></extra>") %>%
layout(title = paste("Median Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters"),
yaxis = ax,
plot_bgcolor = 'grey')
median_heatmap_yearly2
## Mean Heatmaps
# mean heatmap yearly
hm_mean_years <- bottle_filter %>%
group_by(year) %>%
summarise(mean_oxy = mean(oxygen,na.rm = TRUE))
hm_mean_years$y <- rep(0,71)
# Filter out years with less than n stations
for (row in 1:nrow(hm_mean_years)){
if (hm_mean_years[row, "year"] %in% yrs_under_threshold$year){
hm_mean_years[row, "mean_oxy"] <- NaN
}
}
ax <- list(showticklabels = FALSE)
mean_heatmap_yearly <- plot_ly(x = hm_mean_years$year,
y = hm_mean_years$y,
z = hm_mean_years$mean_oxy,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate = "Year:%{x} <br> Mean Oxygen Level: %{z} <extra></extra>") %>%
layout(title = paste("Mean Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters"),
yaxis = ax,
plot_bgcolor = 'grey')
mean_heatmap_yearly
# mean heatmap yearly with observations in hover
txt_mean_year<-c("Obs:678","Obs:2173","Obs:3408","Obs:4468","Obs:7361","Obs:NaN","Obs:3179","Obs:1199","Obs:1644","Obs:4149","Obs:6666",
"Obs:4385","Obs:1891","Obs:1614","Obs:1514","Obs:2782","Obs:1619","Obs:2136","Obs:602","Obs:1169","Obs:4752","Obs:64",
"Obs:65","Obs:2065","Obs:35","Obs:1113","Obs:6109","Obs:747","Obs:427","Obs:3541","Obs:Nan","Obs:1934","Obs:312",
"Obs:2520","Obs:6876","Obs:3411","Obs:3719","Obs:3778","Obs:5159","Obs:3698","Obs:3438","Obs:3335","Obs:3479","Obs:3331",
"Obs:3173","Obs:3261","Obs:3624","Obs:3399","Obs:4979","Obs:3214","Obs:3216","Obs:3223","Obs:3189","Obs:3421","Obs:3201",
"Obs:3393","Obs:3455","Obs:3180","Obs:3320","Obs:3324","Obs:3133","Obs:3178","Obs:3324","Obs:3360","Obs:2835","Obs:3326",
"Obs:3307","Obs:3273","Obs:3044","Obs:2856","Obs:809")
mean_heatmap_yearly <- plot_ly(x = hm_mean_years$year,
y = hm_mean_years$y,
z = hm_mean_years$mean_oxy,
text=txt_mean_year,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate = "Year:%{x} <br> Mean Oxygen Level: %{z} <br> %{text} <extra></extra>") %>%
layout(title = paste("Mean Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters"),
yaxis = ax,
plot_bgcolor = 'grey')
mean_heatmap_yearly
# mean heatmap with quarters
mean_data_quarterly <- bottle_filter %>%
group_by(year,quarter) %>%
summarise(mean_oxy = mean(oxygen,na.rm = TRUE))
mean_data_quarterly
quarter_obs_count<- bottle_filter %>% group_by(year,quarter)%>%count()
quarter_obs_count
add_missing_data<-data.frame("year"=c(1956,1956,1965,1967,1967,1968,1968,1970,1970,1970,1971,1971,1971,1973,1973,
1973,1974,1974,1974,1976,1977,1977,1977,1978,1980,1980,1980,1981,1982,1982,
1982,1991,2009,2018,2020,2020,2020),
"quarter"=c(3,4,4,1,4,3,4,1,2,4,2,3,4,1,2,3,1,2,3,3,1,2,3,4,1,2,3,4,2,3,4,2,2,3,2,3,4),
"mean_oxy"=c(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN
,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,
NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN))
add_missing_data
total_mean_quarterly <- rbind(add_missing_data, mean_data_quarterly) # append empty values with mean data
# filter out quarters with under 5 stations sampled
total_mean_quarterly <- total_mean_quarterly %>%
unite('time', c(year, quarter), remove = FALSE)  # add time column
# change mean_oxy to NaN for selected times
for (row in 1:nrow(total_mean_quarterly)){
if (total_mean_quarterly[row, "time"] %in% qts_under_threshold$time){
total_mean_quarterly[row, "mean_oxy"] <- NaN
}
}
total_mean_quarterly <- total_mean_quarterly[c("year", "quarter", "mean_oxy")]
total_mean_quarterly <- arrange(total_mean_quarterly, year) %>%
mutate(quarter = recode(quarter,'1' = 'Winter','2' = 'Spring','3' =  'Summer','4'='Fall' ))
mean_heatmap_quarterly <- plot_ly(x =total_mean_quarterly$year,
y = total_mean_quarterly$quarter,
z = total_mean_quarterly$mean_oxy,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate = "Year:%{x} <br> Quarter: %{y} <br> Mean Oxygen Level: %{z}<extra></extra>") %>%
layout(title = paste("Mean Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters, over quarters"),
yaxis = yform,
plot_bgcolor = 'grey')
mean_heatmap_quarterly
#mean heatmap quarterly with observations in hover
txt_mean_quarter<-c("Obs:124","Obs:152","Obs:192","Obs:210","Obs:507","Obs:955","Obs:603","Obs:NaN","Obs:820","Obs:851",
"Obs:959","Obs:778","Obs:1535","Obs:1353","Obs:991","Obs:589","Obs:1907","Obs:2445","Obs:1877","Obs:1132",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:858","Obs:721","Obs:1227","Obs:NaN","Obs:NaN",
"Obs:354","Obs:845","Obs:45","Obs:426","Obs:555","Obs:618","Obs:747","Obs:675","Obs:1262","Obs:1465",
"Obs:1825","Obs:1521","Obs:1554","Obs:1766","Obs:1978","Obs:1411","Obs:656","Obs:340","Obs:512","Obs:705",
"Obs:277","Obs:397","Obs:560","Obs:301","Obs:237","Obs:516","Obs:409","Obs:426","Obs:341","Obs:338",
"Obs:1315","Obs:1072","Obs:129","Obs:266","Obs:NaN","Obs:708","Obs:562","Obs:349","Obs:430","Obs:119",
"Obs:716","Obs:871","Obs:NaN","Obs:NaN","Obs:420","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:574","Obs:595","Obs:1306","Obs:877","Obs:1177","Obs:1392","Obs:NaN","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1649","Obs:NaN","Obs:255","Obs:NaN","Obs:NaN",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1113","Obs:1704","Obs:1541",
"Obs:1393","Obs:1471","Obs:NaN","Obs:492","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:427",
"Obs:NaN","Obs:1340","Obs:1128","Obs:1073","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:1265",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:NaN","Obs:312","Obs:425","Obs:624","Obs:649","Obs:822","Obs:2473","Obs:2153","Obs:1113","Obs:1137",
"Obs:777","Obs:966","Obs:834","Obs:834","Obs:1079","Obs:819","Obs:833","Obs:988","Obs:958","Obs:941",
"Obs:934","Obs:945","Obs:825","Obs:959","Obs:2401","Obs:974","Obs:895","Obs:867","Obs:1079","Obs:857",
"Obs:866","Obs:777","Obs:900","Obs:895","Obs:NaN","Obs:1659","Obs:1117","Obs:559","Obs:880","Obs:886",
"Obs:1102","Obs:611","Obs:1067","Obs:702","Obs:781","Obs:781","Obs:1306","Obs:297","Obs:827","Obs:743",
"Obs:800","Obs:826","Obs:793","Obs:842","Obs:791","Obs:803","Obs:838","Obs:1192","Obs:810","Obs:830",
"Obs:1388","Obs:371","Obs:1096","Obs:1245","Obs:1932","Obs:706","Obs:761","Obs:804","Obs:814","Obs:835",
"Obs:816","Obs:984","Obs:602","Obs:814","Obs:778","Obs:802","Obs:810","Obs:833","Obs:988","Obs:564",
"Obs:821","Obs:816","Obs:785","Obs:1084","Obs:791","Obs:761","Obs:1313","Obs:251","Obs:813","Obs:824",
"Obs:840","Obs:851","Obs:867","Obs:835","Obs:824","Obs: 881","Obs:861","Obs:889","Obs:1086","Obs:710",
"Obs:595","Obs:789","Obs:1188:","Obs:428","Obs:867","Obs:837","Obs:NaN","Obs:1647","Obs:845","Obs:832",
"Obs:828","Obs:581","Obs:1009","Obs:715","Obs:823","Obs:746","Obs:797","Obs:812","Obs:1285","Obs:308",
"Obs:821","Obs:810","Obs:807","Obs:834","Obs:812","Obs:907","Obs:458","Obs:728","Obs:822","Obs:827",
"Obs:809","Obs:796","Obs:795","Obs:826","Obs:860","Obs:853","Obs:746","Obs:848","Obs:1040","Obs:611",
"Obs:801","Obs:821","Obs:NaN","Obs:579","Obs:1647","Obs:818","Obs:419","Obs:802","Obs:836","Obs:799",
"Obs:NaN","Obs:NaN","Obs:NaN","Obs:809")
mean_heatmap_quarterly2 <- plot_ly(x = total_mean_quarterly$year,
y = total_mean_quarterly$quarter,
z = total_mean_quarterly$mean_oxy,
text=txt_mean_quarter,
type = "heatmap",
colors = "magma",
reversescale = T,
hovertemplate= "Year:%{x} <br> Quarter: %{y} <br> Mean Oxygen Level: %{z} <br> %{text} <extra></extra>") %>%
layout(title = paste("Mean Oxygen Levels in Core CalCOFI stations up to", max_depth, "meters, over quarters"),
yaxis = yform,
plot_bgcolor = 'grey')
mean_heatmap_quarterly2
# test to make sure values displayed are correct
test_ox_data<- bottle_filter %>% filter(year== 2000) %>% select(c("oxygen"))%>%na.omit()
ox_sum<-sum(test_ox_data$oxygen,na.rm = TRUE)
ox_sum/nrow(test_ox_data)
---
position: right
imgurl: "images/CA_current_RD1copy.png"
---
setwd("~/Documents/CalCOFI-internship/calcofi-internship/parallax")
library(parallaxr)
## Character vector of all MD files
all_md_str <- list.files(path = "parallax/Markdown", full.names = TRUE)
## Loop through each MD file, parse, and return a single tibble
md_tibble <-
all_md_str %>%
purrr::map_dfr(parse_md) # Return a tibble with row-binding
## Output HTML file
generate_scroll_doc(path = "parallax/parallaxr-draft-output.html",
inputs = md_tibble)
library(parallaxr)
install.packages("parallaxr")
library(parallaxr)
install.packages("parallaxr")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("martinctc/parallaxr")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("martinctc/parallaxr")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("martinctc/parallaxr")
library(devtools)
remotes::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("hadley/devtools")
install.packages("devtools")
